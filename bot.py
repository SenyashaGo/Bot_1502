import asyncio
import telegram
import logging
import pandas as pd
import os
from aiogram import Bot, types
from aiogram.utils.markdown import text, bold, italic, code, pre, hitalic, escape_md, _join, hbold, hcode, hpre, \
    underline, hunderline, strikethrough, hstrikethrough, link, hlink, hide_link
from aiogram.dispatcher import Dispatcher
from aiogram.utils import executor
from aiogram.types import InputFile
from aiogram.types import ReplyKeyboardRemove, \
    ReplyKeyboardMarkup, KeyboardButton, \
    InlineKeyboardMarkup, InlineKeyboardButton
from time import sleep
from aiogram.types import ParseMode, InputMediaPhoto, InputMediaVideo, ChatActions
from aiogram.utils import executor
from aiogram.dispatcher import Dispatcher
from aiogram.types.message import ContentType
import logging
from aiogram.dispatcher.filters.state import StatesGroup, State
from aiogram.dispatcher import FSMContext
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.dispatcher.filters import Text
from config import BOT_TOKEN
import aiogram.utils.markdown as fmt

A = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k',
     'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v',
     'w', 'x', 'y', 'z']

B = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K',
     'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V',
     'W', 'X', 'Y', 'Z']

C = ['–∞', '–±', '–≤', '–≥', '–¥', '–µ', '—ë', '–∂', '–∑', '–∏', '–π',
     '–∫', '–ª', '–º', '–Ω', '–æ', '–ø', '—Ä', '—Å', '—Ç', '—É', '—Ñ',
     '—Ö', '—Ü', '—á', '—à', '—â', '—å', '—ã', '—ä', '—ç', '—é', '—è']

D = ['–ê', '–ë', '–í', '–ì', '–î', '–ï', '–Å', '–ñ', '–ó', '–ò', '–ô',
     '–ö', '–õ', '–ú', '–ù', '–û', '–ü', '–†', '–°', '–¢', '–£', '–§',
     '–•', '–¶', '–ß', '–®', '–©', '–¨', '–´', '–™', '–≠', '–Æ', '–Ø']

E = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '0']
Q = ['!', '@', '#', '$', '%', '&', '?', '-', '+', '=', '~']

bot = Bot(token=BOT_TOKEN)
dp = Dispatcher(bot, storage=MemoryStorage())

admin_chat_id = -1001678786017

cancel_button = KeyboardButton("–û—Ç–º–µ–Ω–∞")
cancel_keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
cancel_keyboard.add(cancel_button)


@dp.message_handler(commands=['exams', '—ç–∫–∑–∞–º–µ–Ω—ã'])
async def exams_send(message: types.Message):
    poll_keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    poll_keyboard.add(types.KeyboardButton(text="–®–∫–æ–ª—å–Ω—ã–µ —ç–∫–∑–∞–º–µ–Ω—ã"))
    poll_keyboard.add(types.KeyboardButton(text="–û–ì–≠"))
    poll_keyboard.add(types.KeyboardButton(text="–ï–ì–≠"))
    await message.answer("–≠–∫–∑–∞–º–µ–Ω—ã", reply_markup=poll_keyboard)
    # await bot.send_chat_action(message.from_user.id, ChatActions.UPLOAD_PHOTO)
    # await asyncio.sleep(0,5)
    # await bot.send_photo(message.from_user.id, photo=open('C://Users//admin//Desktop//Ggbot//–°–µ—Å—Å–∏—è-1.pdf', 'rb'))
    # await bot.send_photo(message.from_user.id, photo=open('C://Users//admin//Desktop//Ggbot//–°–µ—Å—Å–∏—è-2.pdf', 'rb'))
    # await bot.send_photo(message.from_user.id, photo=open('C://Users//admin//Desktop//Ggbot//–ï–ì–≠ –û–ì–≠.jpg', 'rb'))
    # await bot.send_message(message.from_user.id, (('–Ø —Å–∫–æ—Ä–æ –Ω–∞—É—á—É—Å—å –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ —ç–∫–∑–∞–º–µ–Ω–æ–≤üí™')), parse_mode=ParseMode.MARKDOWN)


@dp.message_handler(commands=['start'])
async def process_start_command(message: types.Message):
    s = ''
    s1 = ''
    f = str(message.from_user.first_name)
    for i in range(len(f)):
        if f[i] != ' ' and f[i] not in A and f[i] not in B and f[i] not in C and f[i] not in D and f[i] not in E and f[i] not in Q:
            s += '?'
        elif f[i] == ' ':
            s += ' '
        else:
            s += f[i]
    g = str(message.from_user.last_name)
    for i in range(len(g)):
        if g[i] != ' ' and g[i] not in A and g[i] not in B and g[i] not in C and g[i] not in D and f[i] not in E and f[i] not in Q:
            s1 += '?'
        elif g[i] == ' ':
            s1 += ' '
        else:
            s1 += g[i]

    with open("C://Users//admin//Desktop//Ggbot//users.txt", "r") as JF:
        J = set()
        for line in JF:
            J.add(line.strip())
        if not (str(message.chat.id) + ":" + str(message.from_user.username) + ":" + s + ":" + s1) in J:
            JF = open("C://Users//admin//Desktop//Ggbot//users.txt", "a", encoding='ANSI')
            JF.write(str(message.chat.id) + ":" + str(message.from_user.username) + ":" + s + ":" + s1 + '\n')
            J.add(message.chat.id)
    await bot.send_message(message.from_user.id, f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {message.from_user.first_name}!\n–ú–µ–Ω—è –∑–æ–≤—É—Ç –≠–ª–µ–∫—Ç—Ä–æ–Ωüòé\n\
–Ø - –±–æ—Ç –®–∫–æ–ª—ã ‚Ññ1502\n–Ø –≥–æ—Ç–æ–≤ –≤–∞–º –ø–æ–º–æ—á—åüòâ\n–î–æ—Å—Ç—É–ø–Ω—ã —Å–ª–µ–¥—É—é—â–∏–µ –∫–æ–º–∞–Ω–¥—ã:\n/timetable - üîî—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ —É—Ä–æ–∫–æ–≤\
\n/statements - üìù–∑–∞—è–≤–ª–µ–Ω–∏—è\n/hobby - üéØ–∫—Ä—É–∂–∫–∏\n/consultations - ü§ì—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–π\n/calendar - üìÖ—É—á–µ–±–∞ –∏ –∫–∞–Ω–∏–∫—É–ª—ã\
\n/exams - üìö—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ —ç–∫–∑–∞–º–µ–Ω–æ–≤\n/diagnostic - üëæ–±–ª–∏–∂–∞–π—à–∏–µ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∏–µ —Ä–∞–±–æ—Ç—ã\n/ppv - üìù–ü–ü–í\n/inf \
- ü§î–ø–æ–ª–µ–∑–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è\n/contacts - üßë‚ÄçüöÄ–∫–æ–Ω—Ç–∞–∫—Ç—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏ —à–∫–æ–ª—ã –∏ —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∏\n/help - üöë–æ—Å—Ç–∞–ª–∏—Å—å –≤–æ–ø—Ä–æ—Å—ã???\n/question - –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å –∏–ª–∏ –æ—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤ ü§ó")
    inline_btn = InlineKeyboardMarkup()
    inline_btn_1 = InlineKeyboardButton('‚ö†Ô∏è–ò–ù–°–¢–†–£–ö–¶–ò–Ø iphone‚ö†Ô∏è', callback_data='btn1')
    inline_btn.add(inline_btn_1)
    inline_btn_2 = InlineKeyboardButton('‚ö†Ô∏è–ò–ù–°–¢–†–£–ö–¶–ò–Ø android, windows‚ö†Ô∏è', callback_data='btn2')
    inline_btn.add(inline_btn_2)
    inline_btn_3 = InlineKeyboardButton('ü§î–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Åü§î', callback_data='btn3')
    inline_btn.add(inline_btn_3)
    await message.answer("‚ö°–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø—Ä–æ—á–∏—Ç–∞–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é‚ö°", reply_markup=inline_btn)


@dp.message_handler(commands=['calendar', '–∫–∞–ª–µ–Ω–¥–∞—Ä—å'])
async def zayavleniya(message: types.Message):
    s = ''
    s1 = ''
    f = str(message.from_user.first_name)
    for i in range(len(f)):
        if f[i] != ' ' and f[i] not in A and f[i] not in B and f[i] not in C and f[i] not in D and f[i] not in E and f[i] not in Q:
            s += '?'
        elif f[i] == ' ':
            s += ' '
        else:
            s += f[i]
    g = str(message.from_user.last_name)
    for i in range(len(g)):
        if g[i] != ' ' and g[i] not in A and g[i] not in B and g[i] not in C and g[i] not in D and f[i] not in E and f[i] not in Q:
            s1 += '?'
        elif g[i] == ' ':
            s1 += ' '
        else:
            s1 += g[i]

    with open("C://Users//admin//Desktop//Ggbot//users.txt", "r") as JF:
        J = set()
        for line in JF:
            J.add(line.strip())
        if not (str(message.chat.id) + ":" + str(message.from_user.username) + ":" + s + ":" + s1) in J:
            JF = open("C://Users//admin//Desktop//Ggbot//users.txt", "a", encoding='ANSI')
            JF.write(str(message.chat.id) + ":" + str(message.from_user.username) + ":" + s + ":" + s1 + '\n')
            J.add(message.chat.id)
    await bot.send_chat_action(message.from_user.id, ChatActions.UPLOAD_PHOTO)
    await bot.send_photo(message.from_user.id,
                         photo=open('C://Users//admin//Desktop//Ggbot//–£—á–µ–±–Ω—ã–π –∫–∞–ª–µ–Ω–¥–∞—Ä—å.png', 'rb'))


@dp.message_handler(commands=['ppv', '–ü–ü–í'])
async def zayavleniya(message: types.Message):
    s = ''
    s1 = ''
    f = str(message.from_user.first_name)
    for i in range(len(f)):
        if f[i] != ' ' and f[i] not in A and f[i] not in B and f[i] not in C and f[i] not in D and f[i] not in E and f[i] not in Q:
            s += '?'
        elif f[i] == ' ':
            s += ' '
        else:
            s += f[i]
    g = str(message.from_user.last_name)
    for i in range(len(g)):
        if g[i] != ' ' and g[i] not in A and g[i] not in B and g[i] not in C and g[i] not in D and f[i] not in E and f[i] not in Q:
            s1 += '?'
        elif g[i] == ' ':
            s1 += ' '
        else:
            s1 += g[i]

    with open("C://Users//admin//Desktop//Ggbot//users.txt", "r") as JF:
        J = set()
        for line in JF:
            J.add(line.strip())
        if not (str(message.chat.id) + ":" + str(message.from_user.username) + ":" + s + ":" + s1) in J:
            JF = open("C://Users//admin//Desktop//Ggbot//users.txt", "a", encoding='ANSI')
            JF.write(str(message.chat.id) + ":" + str(message.from_user.username) + ":" + s + ":" + s1 + '\n')
            J.add(message.chat.id)
    await bot.send_chat_action(message.from_user.id, ChatActions.UPLOAD_PHOTO)
    await bot.send_photo(message.from_user.id, photo=open('C://Users//admin//Desktop//Ggbot//–ü–ü–í.jpg', 'rb'))


# @dp.message_handler(commands=['voice'])
# async def process_voice_command(message: types.Message):
# await bot.send_voice(message.from_user.id, voice=open('C://Users//admin//Desktop//Ggbot//lalala.ogg', 'rb'))


# @dp.message_handler(commands=['note'])
# async def process_note_command(message: types.Message):
# user_id = message.from_user.id
# await bot.send_chat_action(user_id, ChatActionss.RECORD_VIDEO_NOTE)
# await asyncio.sleep(1)  # –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤–∏–¥–µ–æ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
# await bot.send_video_note(message.from_user.id, video_note=open('C://Users//admin//Desktop//Ggbot//video.mp4', 'rb'))


@dp.message_handler(commands=['inf'])
async def zayavleniya(message: types.Message):
    s = ''
    s1 = ''
    f = str(message.from_user.first_name)
    for i in range(len(f)):
        if f[i] != ' ' and f[i] not in A and f[i] not in B and f[i] not in C and f[i] not in D and f[i] not in E and f[i] not in Q:
            s += '?'
        elif f[i] == ' ':
            s += ' '
        else:
            s += f[i]
    g = str(message.from_user.last_name)
    for i in range(len(g)):
        if g[i] != ' ' and g[i] not in A and g[i] not in B and g[i] not in C and g[i] not in D and f[i] not in E and f[i] not in Q:
            s1 += '?'
        elif g[i] == ' ':
            s1 += ' '
        else:
            s1 += g[i]

    with open("C://Users//admin//Desktop//Ggbot//users.txt", "r") as JF:
        J = set()
        for line in JF:
            J.add(line.strip())
        if not (str(message.chat.id) + ":" + str(message.from_user.username) + ":" + s + ":" + s1) in J:
            JF = open("C://Users//admin//Desktop//Ggbot//users.txt", "a", encoding='ANSI')
            JF.write(str(message.chat.id) + ":" + str(message.from_user.username) + ":" + s + ":" + s1 + '\n')
            J.add(message.chat.id)
    keyboard = InlineKeyboardMarkup()
    url_button1 = InlineKeyboardButton(text="–ì–ò–ê ‚Äì 9, 11",
                                       url="http://obrnadzor.gov.ru/gosudarstvennye-uslugi-i-funkczii/7701537808-gosfunction/gosudarstvennaya-itogovaya-attestacziya-vypusknikov-11-klassov/")
    keyboard.add(url_button1)
    url_button2 = InlineKeyboardButton(text="–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –ò–¢- –∫–ª–∞—Å—Å–æ–≤",
                                       url="http://profil.mos.ru/it/\nhttp://profil.mos.ru/it/?page_id=2193")
    keyboard.add(url_button2)
    url_button3 = InlineKeyboardButton(text="–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –∏–Ω–∂–µ–Ω–µ—Ä–Ω—ã—Ö –∫–ª–∞—Å—Å–æ–≤", url="http://profil.mos.ru/inj.html")
    keyboard.add(url_button3)
    url_button4 = InlineKeyboardButton(text="–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ-–Ω–∞—É—á–Ω—ã—Ö –∫–ª–∞—Å—Å–æ–≤",
                                       url="http://profil.mos.ru/ntek.html")
    keyboard.add(url_button4)
    url_button5 = InlineKeyboardButton(text="–î–µ–º–æ-–≤–∞—Ä–∏–∞–Ω—Ç—ã –¥–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∏—Ö —Ä–∞–±–æ—Ç –æ—Ç –ú–¶–ö–û",
                                       url="https://mcko.ru/pages/m_n_d_i-m_materials")
    keyboard.add(url_button5)
    url_button6 = InlineKeyboardButton(text="–î–ª—è –∂–µ–ª–∞—é—â–∏—Ö –ø—Ä–æ–π—Ç–∏ –Ω–µ–∑–∞–≤–∏—Å–∏–º—É—é –ø—Ä–æ–≤–µ—Ä–∫—É –∑–Ω–∞–Ω–∏–π",
                                       url="https://mcko.ru/diagnostic_requests/new")
    keyboard.add(url_button6)
    url_button7 = InlineKeyboardButton(text="–°—É–±–±–æ—Ç—ã –º–æ—Å–∫–æ–≤—Å–∫–æ–≥–æ —à–∫–æ–ª—å–Ω–∏–∫–∞", url="https://events.educom.ru/")
    keyboard.add(url_button7)
    await bot.send_message(message.chat.id, "–ü–û–õ–ï–ó–ù–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø", reply_markup=keyboard)


@dp.message_handler(commands=['diagnostic', '–¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞'])
async def diagnostic_send(message: types.Message):
    s = ''
    s1 = ''
    f = str(message.from_user.first_name)
    for i in range(len(f)):
        if f[i] != ' ' and f[i] not in A and f[i] not in B and f[i] not in C and f[i] not in D and f[i] not in E and f[i] not in Q:
            s += '?'
        elif f[i] == ' ':
            s += ' '
        else:
            s += f[i]
    g = str(message.from_user.last_name)
    for i in range(len(g)):
        if g[i] != ' ' and g[i] not in A and g[i] not in B and g[i] not in C and g[i] not in D and f[i] not in E and f[i] not in Q:
            s1 += '?'
        elif g[i] == ' ':
            s1 += ' '
        else:
            s1 += g[i]

    with open("C://Users//admin//Desktop//Ggbot//users.txt", "r") as JF:
        J = set()
        for line in JF:
            J.add(line.strip())
        if not (str(message.chat.id) + ":" + str(message.from_user.username) + ":" + s + ":" + s1) in J:
            JF = open("C://Users//admin//Desktop//Ggbot//users.txt", "a", encoding='ANSI')
            JF.write(str(message.chat.id) + ":" + str(message.from_user.username) + ":" + s + ":" + s1 + '\n')
            J.add(message.chat.id)
    user_id = message.from_user.id
    await bot.send_chat_action(user_id, ChatActions.UPLOAD_PHOTO)
    await asyncio.sleep(0, 5)
    await bot.send_photo(user_id, photo=open('C://Users//admin//Desktop//Ggbot//–ú–¶–ö–û1.png', 'rb'))
    await bot.send_photo(user_id, photo=open('C://Users//admin//Desktop//Ggbot//–ú–¶–ö–û2.png', 'rb'))


@dp.message_handler(commands=['contacts'])
async def contact_send(message: types.Message):
    s = ''
    s1 = ''
    f = str(message.from_user.first_name)
    for i in range(len(f)):
        if f[i] != ' ' and f[i] not in A and f[i] not in B and f[i] not in C and f[i] not in D and f[i] not in E and f[i] not in Q:
            s += '?'
        elif f[i] == ' ':
            s += ' '
        else:
            s += f[i]
    g = str(message.from_user.last_name)
    for i in range(len(g)):
        if g[i] != ' ' and g[i] not in A and g[i] not in B and g[i] not in C and g[i] not in D and f[i] not in E and f[i] not in Q:
            s1 += '?'
        elif g[i] == ' ':
            s1 += ' '
        else:
            s1 += g[i]

    with open("C://Users//admin//Desktop//Ggbot//users.txt", "r") as JF:
        J = set()
        for line in JF:
            J.add(line.strip())
        if not (str(message.chat.id) + ":" + str(message.from_user.username) + ":" + s + ":" + s1) in J:
            JF = open("C://Users//admin//Desktop//Ggbot//users.txt", "a", encoding='ANSI')
            JF.write(str(message.chat.id) + ":" + str(message.from_user.username) + ":" + s + ":" + s1 + '\n')
            J.add(message.chat.id)
    keyboard = InlineKeyboardMarkup()
    url_button8 = InlineKeyboardButton(text="–°–ê–ô–¢ –®–ö–û–õ–´", url="https://1502.mskobr.ru/#/")
    keyboard.add(url_button8)
    await bot.send_message(message.from_user.id, '8(495) 962-18-11 –¥–æ–±–∞–≤–æ—á–Ω—ã–π 805 ‚Äî —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å –∫–æ—Ä–ø—É—Å–∞ –ë—Ä–∏—Ç–æ–≤ –î–µ–Ω–∏—Å –†—É—Å–ª–∞–Ω–æ–≤–∏—á;\n\
8(495) 963-19-11 –¥–æ–±–∞–≤–æ—á–Ω—ã–π 811 ‚Äî –º–µ—Ç–æ–¥–∏—Å—Ç –∫–æ—Ä–ø—É—Å–∞ –°–∫–∞–ª–µ–ø–æ–≤–∞ –õ–∏–¥–∏—è –í–∞—Å–∏–ª—å–µ–≤–Ω–∞;\n8(495) 963-08-59 –¥–æ–±–∞–≤–æ—á–Ω—ã–π 801 ‚Äî —Å–µ–∫—Ä–µ—Ç–∞—Ä—å –∫–æ—Ä–ø—É—Å–∞ –ì–∞–º–º–∞;\n8(495) 963-47-78 –¥–æ–±–∞–≤–æ—á–Ω—ã–π 851 ‚Äî —Å–æ—Ü–∏–∞–ª—å–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã;\n8(495) 963-66-90 –¥–æ–±–∞–≤–æ—á–Ω—ã–π 804 ‚Äî –ø–æ—Å—Ç –æ—Ö—Ä–∞–Ω—ã;',
                           reply_markup=keyboard)


@dp.message_handler(commands=['hobby', '–∫—Ä—É–∂–∫–∏'])
async def hobby_send(message: types.Message):
    s = ''
    s1 = ''
    f = str(message.from_user.first_name)
    for i in range(len(f)):
        if f[i] != ' ' and f[i] not in A and f[i] not in B and f[i] not in C and f[i] not in D and f[i] not in E and f[i] not in Q:
            s += '?'
        elif f[i] == ' ':
            s += ' '
        else:
            s += f[i]
    g = str(message.from_user.last_name)
    for i in range(len(g)):
        if g[i] != ' ' and g[i] not in A and g[i] not in B and g[i] not in C and g[i] not in D and f[i] not in E and f[i] not in Q:
            s1 += '?'
        elif g[i] == ' ':
            s1 += ' '
        else:
            s1 += g[i]

    with open("C://Users//admin//Desktop//Ggbot//users.txt", "r") as JF:
        J = set()
        for line in JF:
            J.add(line.strip())
        if not (str(message.chat.id) + ":" + str(message.from_user.username) + ":" + s + ":" + s1) in J:
            JF = open("C://Users//admin//Desktop//Ggbot//users.txt", "a", encoding='ANSI')
            JF.write(str(message.chat.id) + ":" + str(message.from_user.username) + ":" + s + ":" + s1 + '\n')
            J.add(message.chat.id)
    poll_keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    poll_keyboard.add(types.KeyboardButton(text="7 –∫–ª–∞—Å—Å"))
    poll_keyboard.add(types.KeyboardButton(text="8 –∫–ª–∞—Å—Å"))
    poll_keyboard.add(types.KeyboardButton(text="9 –∫–ª–∞—Å—Å"))
    poll_keyboard.add(types.KeyboardButton(text="10 –∫–ª–∞—Å—Å"))
    poll_keyboard.add(types.KeyboardButton(text="11 –∫–ª–∞—Å—Å"))
    await message.answer("–ö–†–£–ñ–ö–ò", reply_markup=poll_keyboard)


@dp.message_handler(lambda message: message.text == "7 –∫–ª–∞—Å—Å")
async def action_cancel(message: types.Message):
    remove_keyboard = types.ReplyKeyboardRemove()
    await bot.send_chat_action(message.from_user.id, ChatActions.UPLOAD_PHOTO)
    await asyncio.sleep(0, 5)
    await bot.send_photo(message.from_user.id, photo=open('C://Users//admin//Desktop//Ggbot//7 –∫–ª–∞—Å—Å.jpg', 'rb'))


@dp.message_handler(lambda message: message.text == "8 –∫–ª–∞—Å—Å")
async def action_cancel(message: types.Message):
    remove_keyboard = types.ReplyKeyboardRemove()
    await bot.send_chat_action(message.from_user.id, ChatActions.UPLOAD_PHOTO)
    await asyncio.sleep(0, 5)
    await bot.send_photo(message.from_user.id, photo=open('C://Users//admin//Desktop//Ggbot//8 –∫–ª–∞—Å—Å.jpg', 'rb'))


@dp.message_handler(lambda message: message.text == "9 –∫–ª–∞—Å—Å")
async def action_cancel(message: types.Message):
    remove_keyboard = types.ReplyKeyboardRemove()
    await bot.send_chat_action(message.from_user.id, ChatActions.UPLOAD_PHOTO)
    await asyncio.sleep(0, 5)
    await bot.send_photo(message.from_user.id, photo=open('C://Users//admin//Desktop//Ggbot//9 –∫–ª–∞—Å—Å.jpg', 'rb'))


@dp.message_handler(lambda message: message.text == "10 –∫–ª–∞—Å—Å")
async def action_cancel(message: types.Message):
    remove_keyboard = types.ReplyKeyboardRemove()
    await bot.send_chat_action(message.from_user.id, ChatActions.UPLOAD_PHOTO)
    await asyncio.sleep(0, 5)
    await bot.send_photo(message.from_user.id, photo=open('C://Users//admin//Desktop//Ggbot//10 –∫–ª–∞—Å—Å.jpg', 'rb'))


@dp.message_handler(lambda message: message.text == "11 –∫–ª–∞—Å—Å")
async def action_cancel(message: types.Message):
    remove_keyboard = types.ReplyKeyboardRemove()
    await bot.send_chat_action(message.from_user.id, ChatActions.UPLOAD_PHOTO)
    await asyncio.sleep(0, 5)
    await bot.send_photo(message.from_user.id, photo=open('C://Users//admin//Desktop//Ggbot//11 –∫–ª–∞—Å—Å.jpg', 'rb'))


@dp.message_handler(commands=['timetable', '—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ'])
async def timetable_send(message: types.Message):
    s = ''
    s1 = ''
    f = str(message.from_user.first_name)
    for i in range(len(f)):
        if f[i] != ' ' and f[i] not in A and f[i] not in B and f[i] not in C and f[i] not in D and f[i] not in E and f[i] not in Q:
            s += '?'
        elif f[i] == ' ':
            s += ' '
        else:
            s += f[i]
    g = str(message.from_user.last_name)
    for i in range(len(g)):
        if g[i] != ' ' and g[i] not in A and g[i] not in B and g[i] not in C and g[i] not in D and f[i] not in E and f[i] not in Q:
            s1 += '?'
        elif g[i] == ' ':
            s1 += ' '
        else:
            s1 += g[i]

    with open("C://Users//admin//Desktop//Ggbot//users.txt", "r") as JF:
        J = set()
        for line in JF:
            J.add(line.strip())
        if not (str(message.chat.id) + ":" + str(message.from_user.username) + ":" + s + ":" + s1) in J:
            JF = open("C://Users//admin//Desktop//Ggbot//users.txt", "a", encoding='ANSI')
            JF.write(str(message.chat.id) + ":" + str(message.from_user.username) + ":" + s + ":" + s1 + '\n')
            J.add(message.chat.id)
    poll_keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    poll_keyboard.add(types.KeyboardButton(text="7–õ"))
    poll_keyboard.add(types.KeyboardButton(text="7–ú"))
    poll_keyboard.add(types.KeyboardButton(text="7–ù"))
    poll_keyboard.add(types.KeyboardButton(text="8–õ"))
    poll_keyboard.add(types.KeyboardButton(text="8–ú"))
    poll_keyboard.add(types.KeyboardButton(text="8–ù"))
    poll_keyboard.add(types.KeyboardButton(text="9–õ"))
    poll_keyboard.add(types.KeyboardButton(text="9–ú"))
    poll_keyboard.add(types.KeyboardButton(text="9–ù"))
    poll_keyboard.add(types.KeyboardButton(text="10–õ"))
    poll_keyboard.add(types.KeyboardButton(text="10–ú"))
    poll_keyboard.add(types.KeyboardButton(text="10–ù"))
    poll_keyboard.add(types.KeyboardButton(text="11–õ"))
    poll_keyboard.add(types.KeyboardButton(text="11–ú"))
    await message.answer("–†–ê–°–ü–ò–°–ê–ù–ò–ï", reply_markup=poll_keyboard)


@dp.message_handler(
    lambda message: message.text == "7–ª" or message.text == "7l" or message.text == "7 –ª" or message.text == "7 l" or message.text == "7 –õ" or message.text == "7–õ" or message.text == "7 L" or message.text == "7L")
async def action_cancel(message: types.Message):
    remove_keyboard = types.ReplyKeyboardRemove()
    await bot.send_chat_action(message.from_user.id, ChatActions.UPLOAD_PHOTO)
    await asyncio.sleep(0, 5)
    await bot.send_photo(message.from_user.id, photo=open('C://Users//admin//Desktop//Ggbot//7–ª.png', 'rb'))
    await bot.send_photo(message.from_user.id, photo=open('C://Users//admin//Desktop//Ggbot//Z9.png', 'rb'))


@dp.message_handler(
    lambda message: message.text == "7–º" or message.text == "7m" or message.text == "7 –º" or message.text == "7 m" or message.text == "7 –ú" or message.text == "7–ú" or message.text == "7 M" or message.text == "7M")
async def action_cancel(message: types.Message):
    remove_keyboard = types.ReplyKeyboardRemove()
    await bot.send_chat_action(message.from_user.id, ChatActions.UPLOAD_PHOTO)
    await asyncio.sleep(0, 5)
    await bot.send_photo(message.from_user.id, photo=open('C://Users//admin//Desktop//Ggbot//7m.png', 'rb'))
    await bot.send_photo(message.from_user.id, photo=open('C://Users//admin//Desktop//Ggbot//Z9.png', 'rb'))


@dp.message_handler(
    lambda message: message.text == "8–ª" or message.text == "8l" or message.text == "8 –ª" or message.text == "8 l" or message.text == "8 –õ" or message.text == "8–õ" or message.text == "8 L" or message.text == "8L")
async def action_cancel(message: types.Message):
    remove_keyboard = types.ReplyKeyboardRemove()
    await bot.send_chat_action(message.from_user.id, ChatActions.UPLOAD_PHOTO)
    await asyncio.sleep(0, 5)
    await bot.send_photo(message.from_user.id, photo=open("C://Users//admin//Desktop//Ggbot//8l.png", 'rb'))
    await bot.send_photo(message.from_user.id, photo=open('C://Users//admin//Desktop//Ggbot//Z9.png', 'rb'))


@dp.message_handler(
    lambda message: message.text == "8–º" or message.text == "8m" or message.text == "8 –º" or message.text == "8 m" or message.text == "8 –ú" or message.text == "8–ú" or message.text == "8 M" or message.text == "8M")
async def action_cancel(message: types.Message):
    remove_keyboard = types.ReplyKeyboardRemove()
    await bot.send_chat_action(message.from_user.id, ChatActions.UPLOAD_PHOTO)
    await asyncio.sleep(0, 5)
    await bot.send_photo(message.from_user.id, photo=open('C://Users//admin//Desktop//Ggbot//8m.png', 'rb'))
    await bot.send_photo(message.from_user.id, photo=open('C://Users//admin//Desktop//Ggbot//Z9.png', 'rb'))


@dp.message_handler(
    lambda message: message.text == "8–Ω" or message.text == "8n" or message.text == "8 –Ω" or message.text == "8 n" or message.text == "8 –ù" or message.text == "8–ù" or message.text == "8 N" or message.text == "8N")
async def action_cancel(message: types.Message):
    remove_keyboard = types.ReplyKeyboardRemove()
    await bot.send_chat_action(message.from_user.id, ChatActions.UPLOAD_PHOTO)
    await asyncio.sleep(0, 5)
    await bot.send_photo(message.from_user.id, photo=open('C://Users//admin//Desktop//Ggbot//8n.png', 'rb'))
    await bot.send_photo(message.from_user.id, photo=open('C://Users//admin//Desktop//Ggbot//Z9.png', 'rb'))


@dp.message_handler(
    lambda message: message.text == "9–ª" or message.text == "9l" or message.text == "9 –ª" or message.text == "9 l" or message.text == "9 –õ" or message.text == "9–õ" or message.text == "9 L" or message.text == "9L")
async def action_cancel(message: types.Message):
    remove_keyboard = types.ReplyKeyboardRemove()
    await bot.send_chat_action(message.from_user.id, ChatActions.UPLOAD_PHOTO)
    await asyncio.sleep(0, 5)
    await bot.send_photo(message.from_user.id, photo=open('C://Users//admin//Desktop//Ggbot//9l.png', 'rb'))
    await bot.send_photo(message.from_user.id, photo=open('C://Users//admin//Desktop//Ggbot//Z9.png', 'rb'))


@dp.message_handler(
    lambda message: message.text == "9–º" or message.text == "9m" or message.text == "9 –º" or message.text == "9 m" or message.text == "9 –ú" or message.text == "9–ú" or message.text == "9 M" or message.text == "9M")
async def action_cancel(message: types.Message):
    remove_keyboard = types.ReplyKeyboardRemove()
    await bot.send_chat_action(message.from_user.id, ChatActions.UPLOAD_PHOTO)
    await asyncio.sleep(0, 5)
    await bot.send_photo(message.from_user.id, photo=open("C://Users//admin//Desktop//Ggbot//9m.png", 'rb'))
    await bot.send_photo(message.from_user.id, photo=open('C://Users//admin//Desktop//Ggbot//Z9.png', 'rb'))


@dp.message_handler(
    lambda message: message.text == "9–Ω" or message.text == "9n" or message.text == "9 –Ω" or message.text == "9 n" or message.text == "9 –ù" or message.text == "9–ù" or message.text == "9 N" or message.text == "9N")
async def action_cancel(message: types.Message):
    remove_keyboard = types.ReplyKeyboardRemove()
    await bot.send_chat_action(message.from_user.id, ChatActions.UPLOAD_PHOTO)
    await asyncio.sleep(0, 5)
    await bot.send_photo(message.from_user.id, photo=open("C://Users//admin//Desktop//Ggbot//9n.png", 'rb'))
    await bot.send_photo(message.from_user.id, photo=open('C://Users//admin//Desktop//Ggbot//Z9.png', 'rb'))


@dp.message_handler(
    lambda message: message.text == "10–ª" or message.text == "10l" or message.text == "10 –ª" or message.text == "10 l" or message.text == "10 –õ" or message.text == "10–õ" or message.text == "10 L" or message.text == "10L")
async def action_cancel(message: types.Message):
    remove_keyboard = types.ReplyKeyboardRemove()
    await bot.send_chat_action(message.from_user.id, ChatActions.UPLOAD_PHOTO)
    await asyncio.sleep(0, 5)
    await bot.send_photo(message.from_user.id, photo=open("C://Users//admin//Desktop//Ggbot//10l.png", 'rb'))
    await bot.send_photo(message.from_user.id, photo=open('C://Users//admin//Desktop//Ggbot//Z9.png', 'rb'))


@dp.message_handler(
    lambda message: message.text == "10–º" or message.text == "10m" or message.text == "10 –º" or message.text == "10 m" or message.text == "10 –ú" or message.text == "10–ú" or message.text == "10 M" or message.text == "10M")
async def action_cancel(message: types.Message):
    remove_keyboard = types.ReplyKeyboardRemove()
    await bot.send_chat_action(message.from_user.id, ChatActions.UPLOAD_PHOTO)
    await asyncio.sleep(0, 5)
    await bot.send_photo(message.from_user.id, photo=open("C://Users//admin//Desktop//Ggbot//10m.png", 'rb'))
    await bot.send_photo(message.from_user.id, photo=open('C://Users//admin//Desktop//Ggbot//Z9.png', 'rb'))


@dp.message_handler(
    lambda message: message.text == "10–Ω" or message.text == "10n" or message.text == "10 –Ω" or message.text == "10 n" or message.text == "10 –ù" or message.text == "10–ù" or message.text == "10 N" or message.text == "10N")
async def action_cancel(message: types.Message):
    remove_keyboard = types.ReplyKeyboardRemove()
    await bot.send_chat_action(message.from_user.id, ChatActions.UPLOAD_PHOTO)
    await asyncio.sleep(0, 5)
    await bot.send_photo(message.from_user.id, photo=open('C://Users//admin//Desktop//Ggbot//10n.png', 'rb'))
    await bot.send_photo(message.from_user.id, photo=open('C://Users//admin//Desktop//Ggbot//Z9.png', 'rb'))


@dp.message_handler(
    lambda message: message.text == "11—è" or message.text == "11ya" or message.text == "11 —è" or message.text == "11 ya" or message.text == "11 –Ø" or message.text == "11–Ø" or message.text == "11 YA" or message.text == "11YA")
async def action_cancel(message: types.Message):
    remove_keyboard = types.ReplyKeyboardRemove()
    await bot.send_chat_action(message.from_user.id, ChatActions.UPLOAD_PHOTO)
    await asyncio.sleep(0, 5)
    await bot.send_photo(message.from_user.id, photo=open('C://Users//admin//Desktop//Ggbot//11ya.png', 'rb'))
    await bot.send_photo(message.from_user.id, photo=open('C://Users//admin//Desktop//Ggbot//Z9.png', 'rb'))


@dp.message_handler(
    lambda message: message.text == "11–ª" or message.text == "11l" or message.text == "11 –ª" or message.text == "11 l" or message.text == "11 –õ" or message.text == "11–õ" or message.text == "11 L" or message.text == "11L")
async def action_cancel(message: types.Message):
    remove_keyboard = types.ReplyKeyboardRemove()
    await bot.send_chat_action(message.from_user.id, ChatActions.UPLOAD_PHOTO)
    await asyncio.sleep(0, 5)
    await bot.send_photo(message.from_user.id, photo=open('C://Users//admin//Desktop//Ggbot//11l.png', 'rb'))
    await bot.send_photo(message.from_user.id, photo=open('C://Users//admin//Desktop//Ggbot//Z9.png', 'rb'))


@dp.message_handler(
    lambda message: message.text == "11–º" or message.text == "11m" or message.text == "11 –º" or message.text == "11 m" or message.text == "11 –ú" or message.text == "11–ú" or message.text == "11 M" or message.text == "11M")
async def action_cancel(message: types.Message):
    remove_keyboard = types.ReplyKeyboardRemove()
    await bot.send_chat_action(message.from_user.id, ChatActions.UPLOAD_PHOTO)
    await asyncio.sleep(0, 5)
    await bot.send_photo(message.from_user.id, photo=open('C://Users//admin//Desktop//Ggbot//11m.png', 'rb'))
    await bot.send_photo(message.from_user.id, photo=open('C://Users//admin//Desktop//Ggbot//Z9.png', 'rb'))


@dp.message_handler(
    lambda message: message.text == "11–Ω" or message.text == "11n" or message.text == "11 –Ω" or message.text == "11 n" or message.text == "11 –ù" or message.text == "11–ù" or message.text == "11 N" or message.text == "11N")
async def action_cancel(message: types.Message):
    remove_keyboard = types.ReplyKeyboardRemove()
    await bot.send_chat_action(message.from_user.id, ChatActions.UPLOAD_PHOTO)
    await asyncio.sleep(0, 5)
    await bot.send_photo(message.from_user.id, photo=open('C://Users//admin//Desktop//Ggbot//11n.png', 'rb'))
    await bot.send_photo(message.from_user.id, photo=open('C://Users//admin//Desktop//Ggbot//Z9.png', 'rb'))


@dp.message_handler(commands=['statements', '–∑–∞—è–≤–ª–µ–Ω–∏—è'])
async def statements_send(message: types.Message):
    s = ''
    s1 = ''
    f = str(message.from_user.first_name)
    for i in range(len(f)):
        if f[i] != ' ' and f[i] not in A and f[i] not in B and f[i] not in C and f[i] not in D and f[i] not in E and f[i] not in Q:
            s += '?'
        elif f[i] == ' ':
            s += ' '
        else:
            s += f[i]
    g = str(message.from_user.last_name)
    for i in range(len(g)):
        if g[i] != ' ' and g[i] not in A and g[i] not in B and g[i] not in C and g[i] not in D and f[i] not in E and f[i] not in Q:
            s1 += '?'
        elif g[i] == ' ':
            s1 += ' '
        else:
            s1 += g[i]

    with open("C://Users//admin//Desktop//Ggbot//users.txt", "r") as JF:
        J = set()
        for line in JF:
            J.add(line.strip())
        if not (str(message.chat.id) + ":" + str(message.from_user.username) + ":" + s + ":" + s1) in J:
            JF = open("C://Users//admin//Desktop//Ggbot//users.txt", "a", encoding='ANSI')
            JF.write(str(message.chat.id) + ":" + str(message.from_user.username) + ":" + s + ":" + s1 + '\n')
            J.add(message.chat.id)
    poll_keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    poll_keyboard.add(types.KeyboardButton(text="–û–± –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ (–î–æ—à–∫–æ–ª—å–Ω–æ–µ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ)"))
    poll_keyboard.add(types.KeyboardButton(text="–û–± –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ (–û–±—â–µ–µ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ)"))
    poll_keyboard.add(types.KeyboardButton(text="–î–æ–ø—É—Å–∫ –∫ —É—á–µ–±–Ω—ã–º –∑–∞–Ω—è—Ç–∏—è–º"))
    poll_keyboard.add(types.KeyboardButton(text="–û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –Ω–∞ –∑–∞–Ω—è—Ç–∏—è—Ö"))
    await message.answer("–ó–ê–Ø–í–õ–ï–ù–ò–Ø", reply_markup=poll_keyboard)


@dp.message_handler(commands=['–∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏', 'consultations'])
async def consultations_send(message: types.Message):
    poll_keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    poll_keyboard.add(types.KeyboardButton(text="–†—É—Å—Å–∫–∏–π —è–∑—ã–∫"))
    poll_keyboard.add(types.KeyboardButton(text="–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞"))
    poll_keyboard.add(types.KeyboardButton(text="–§–∏–∑–∏–∫–∞"))
    poll_keyboard.add(types.KeyboardButton(text="–ë–∏–æ–ª–æ–≥–∏—è, —Ö–∏–º–∏—è, –≥–µ–æ–≥—Ä–∞—Ñ–∏—è, –æ–±—â–µ—Å—Ç–≤–æ–∑–Ω–∞–Ω–∏–µ"))
    poll_keyboard.add(types.KeyboardButton(text="–ê–Ω–≥–ª–∏–π—Å–∫–∏–π —è–∑—ã–∫"))
    poll_keyboard.add(types.KeyboardButton(text="–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞"))
    await message.answer("–ö–û–ù–°–£–õ–¨–¢–ê–¶–ò–ò", reply_markup=poll_keyboard)
    await bot.send_message(message.from_user.id, '‚ùó‚ùó‚ùó‚ùó‚ùó‚ùó\n–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –Ω–∞ –∫–∞–Ω–∏–∫—É–ª–∞—Ö 11.04-17.04üëá')
    await bot.send_document(message.from_user.id, document=open('C://Users//admin//Desktop//Ggbot//7 –∫–ª–∞—Å—Å.docx', 'rb'))
    await bot.send_document(message.from_user.id, document=open('C://Users//admin//Desktop//Ggbot//8 –∫–ª–∞—Å—Å.docx', 'rb'))
    await bot.send_document(message.from_user.id, document=open('C://Users//admin//Desktop//Ggbot//9 –∫–ª–∞—Å—Å.docx', 'rb'))
    await bot.send_document(message.from_user.id,
                            document=open('C://Users//admin//Desktop//Ggbot//10  –∫–ª–∞—Å—Å.docx', 'rb'))
    await bot.send_document(message.from_user.id,
                            document=open('C://Users//admin//Desktop//Ggbot//11 –∫–ª–∞—Å—Å.docx', 'rb'))


@dp.message_handler(commands=['help'])
async def process_command_1(message: types.Message):
    s = ''
    s1 = ''
    f = str(message.from_user.first_name)
    for i in range(len(f)):
        if f[i] != ' ' and f[i] not in A and f[i] not in B and f[i] not in C and f[i] not in D and f[i] not in E and f[i] not in Q:
            s += '?'
        elif f[i] == ' ':
            s += ' '
        else:
            s += f[i]
    g = str(message.from_user.last_name)
    for i in range(len(g)):
        if g[i] != ' ' and g[i] not in A and g[i] not in B and g[i] not in C and g[i] not in D and f[i] not in E and f[i] not in Q:
            s1 += '?'
        elif g[i] == ' ':
            s1 += ' '
        else:
            s1 += g[i]

    with open("C://Users//admin//Desktop//Ggbot//users.txt", "r") as JF:
        J = set()
        for line in JF:
            J.add(line.strip())
        if not (str(message.chat.id) + ":" + str(message.from_user.username) + ":" + s + ":" + s1) in J:
            JF = open("C://Users//admin//Desktop//Ggbot//users.txt", "a", encoding='ANSI')
            JF.write(str(message.chat.id) + ":" + str(message.from_user.username) + ":" + s + ":" + s1 + '\n')
            J.add(message.chat.id)
    await bot.send_message(message.from_user.id, "–î–æ—Å—Ç—É–ø–Ω—ã —Å–ª–µ–¥—É—é—â–∏–µ –∫–æ–º–∞–Ω–¥—ã:\n/timetable - üîî—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ —É—Ä–æ–∫–æ–≤\
\n/statements - üìù–∑–∞—è–≤–ª–µ–Ω–∏—è\n/hobby - üéØ–∫—Ä—É–∂–∫–∏\n/consultations - ü§ì—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–π\n/calendar - üìÖ—É—á–µ–±–∞ –∏ –∫–∞–Ω–∏–∫—É–ª—ã\
\n/exams - üìö—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ —ç–∫–∑–∞–º–µ–Ω–æ–≤\n/diagnostic - üëæ–±–ª–∏–∂–∞–π—à–∏–µ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∏–µ —Ä–∞–±–æ—Ç—ã\n/ppv - üìù–ü–ü–í\n/inf \
- ü§î–ø–æ–ª–µ–∑–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è\n/contacts - üßë‚ÄçüöÄ–∫–æ–Ω—Ç–∞–∫—Ç—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏ —à–∫–æ–ª—ã –∏ —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∏\n/question - –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å –∏–ª–∏ –æ—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤ ü§ó")
    inline_btn = InlineKeyboardMarkup()
    inline_btn_1 = InlineKeyboardButton('‚ö†Ô∏è–ò–ù–°–¢–†–£–ö–¶–ò–Ø iphone‚ö†Ô∏è', callback_data='btn1')
    inline_btn.add(inline_btn_1)
    inline_btn_2 = InlineKeyboardButton('‚ö†Ô∏è–ò–ù–°–¢–†–£–ö–¶–ò–Ø android, windows‚ö†Ô∏è', callback_data='btn2')
    inline_btn.add(inline_btn_2)
    inline_btn_3 = InlineKeyboardButton('ü§î–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Åü§î', callback_data='btn3')
    inline_btn.add(inline_btn_3)
    await message.answer("–í –∫–∞–∫–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –≤–∞–º –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è –ø–æ–º–æ—â—å?", reply_markup=inline_btn)


@dp.callback_query_handler(lambda c: c.data and c.data.startswith('btn'))
async def process_callback_kb1btn1(callback_query: types.CallbackQuery):
    code = callback_query.data[-1]
    if code.isdigit():
        code = int(code)
    if code == 1:
        await bot.answer_callback_query(callback_query.id)
        await bot.send_message(callback_query.from_user.id,
                               '–£–ø—Ä–∞–≤–ª—è—Ç—å –±–æ—Ç–æ–º –æ—á–µ–Ω—å –ª–µ–≥–∫–æüòä\n–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –Ω—É–∂–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–æ—Å—Ç–æ –Ω–∞–∂–∞—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫—É "–ú–µ–Ω—é" –∏–ª–∏ —Ç—Ä–∏ –ø–æ–ª–æ—Å–∫–∏ –≤ –ª–µ–≤–æ–º –Ω–∏–∂–Ω–µ–º —É–≥–ª—É —ç–∫—Ä–∞–Ω–∞.')
        await asyncio.sleep(0, 5)
        await bot.send_message(callback_query.from_user.id, '‚ùó‚ùó‚ùó‚ùó‚ùó‚ùó')
        await bot.send_photo(callback_query.from_user.id,
                             photo=open('C://Users//admin//Desktop//Ggbot//instr2.png', 'rb'))
        await asyncio.sleep(0, 5)
        await bot.send_message(callback_query.from_user.id, '‚ùó‚ùó‚ùó‚ùó‚ùó‚ùó')
        await bot.send_message(callback_query.from_user.id, '–î–ª—è –∫–æ–º–∞–Ω–¥:\n/timetable\n/statements\n/hobby\n/consultations\n\
\n–î–æ—Å—Ç—É–ø–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è –≤—ã–±–æ—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏üëá')
        await asyncio.sleep(0, 5)
        await bot.send_photo(callback_query.from_user.id,
                             photo=open('C://Users//admin//Desktop//Ggbot//instr3.png', 'rb'))
    if code == 2:
        await bot.send_message(callback_query.from_user.id, '‚ùó‚ùó‚ùó‚ùó‚ùó‚ùó')
        await bot.send_message(callback_query.from_user.id,
                               '–ß—Ç–æ–±—ã –≤—ã–±—Ä–∞—Ç—å –∫–æ–º–∞–Ω–¥—É, –Ω—É–∂–Ω–æ –Ω–∞–ø–∏—Å–∞—Ç—å "/" –∏ —Å–¥–µ–ª–∞—Ç—å –≤—ã–±–æ—Ä –∏–∑ –≤—ã–ø–∞–¥–∞—é—â–µ–≥–æ —Å–ø–∏—Å–∫–∞:')
        await asyncio.sleep(0, 5)
        await bot.send_photo(callback_query.from_user.id,
                             photo=open('C://Users//admin//Desktop//Ggbot//Android.JPG', 'rb'))
        await bot.send_message(callback_query.from_user.id, '‚ùó‚ùó‚ùó‚ùó‚ùó‚ùó')
        await bot.send_message(callback_query.from_user.id, '–î–ª—è –∫–æ–º–∞–Ω–¥:\n/timetable\n/statements\n/hobby\n/consultations\n\
\n–î–æ—Å—Ç—É–ø–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è –≤—ã–±–æ—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏üëá')
        await asyncio.sleep(0, 5)
        await bot.send_photo(callback_query.from_user.id,
                             photo=open('C://Users//admin//Desktop//Ggbot//instr33.png', 'rb'))
    if code == 3:
        await bot.answer_callback_query(callback_query.id)
        await bot.send_message(callback_query.from_user.id, 'üë®‚Äçüíª–ù–∞–∂–º–∏—Ç–µ —Å—é–¥–∞, —á—Ç–æ–±—ã –∑–∞–¥–∞—Ç—å\n–≤–æ–ø—Ä–æ—Å: /question')


@dp.message_handler(commands=['question'])
async def start(message: types.Message):
    await bot.send_message(message.chat.id, '–ó–∞–¥–∞–π—Ç–µ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å:', reply_markup=cancel_keyboard)
    await Form.vopros.set()  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ


# @dp.message_handler(commands=["help1502"])

# async def messages(message):
# 	if int(message.chat.id) == int(633675462):
# 		try:
# 			chatId=message.text.split(': ')[0]
# 			text=message.text.split(': ')[1]
# 			await bot.send_message(chatId, text)
# 		except:
# 			pass
# 	else:
# 		await bot.send_message(633675462, str(message.chat.id) + ': ' + message.text)
# 		await bot.send_message(message.chat.id, f'{message.from_user.first_name}, –í–∞—à –∑–∞–ø—Ä–æ—Å –ø—Ä–∏–Ω—è—Ç. –ú—ã —É–∂–µ –ø–æ–ª—É—á–∏–ª–∏ –µ–≥–æ. –û–∂–∏–¥–∞–π—Ç–µ üëç')


# @dp.callback_query_handler(lambda call: True)
# async def process_callback_button1(callback_query: types.CallbackQuery):
# if call.data == 'btn1':
# await bot.answer_callback_query(callback_query.id)
# await bot.send_photo(callback_query.from_user.id, photo=open('C://Users//admin//Desktop//Ggbot//–°–Ω–∏–º–æ–∫123.JPG', 'rb'))
# await bot.send_message(callback_query.from_user.id, '–ù–∞–∂–∞—Ç–∞ –ø–µ—Ä–≤–∞—è –∫–Ω–æ–ø–∫–∞!')
# await bot.send_message(callback_query.from_user.id, '–ù–∞–∂–∞—Ç–∞ –ø–µ—Ä–≤–∞—è –∫–Ω–æ–ø–∫–∞!')


@dp.message_handler(lambda message: message.text == "–†—É—Å—Å–∫–∏–π —è–∑—ã–∫")
async def action_cancel(message: types.Message):
    remove_keyboard = types.ReplyKeyboardRemove()
    await bot.send_chat_action(message.from_user.id, ChatActions.UPLOAD_PHOTO)
    await asyncio.sleep(0, 5)
    await bot.send_photo(message.from_user.id, photo=open('C://Users//admin//Desktop//Ggbot//–†—É—Å—Å–∫–∏–π –∫–æ–Ω—Å—É–ª.png', 'rb'))


@dp.message_handler(lambda message: message.text == "–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞")
async def action_cancel(message: types.Message):
    remove_keyboard = types.ReplyKeyboardRemove()
    await bot.send_chat_action(message.from_user.id, ChatActions.UPLOAD_PHOTO)
    await asyncio.sleep(0, 5)
    await bot.send_photo(message.from_user.id, photo=open('C://Users//admin//Desktop//Ggbot//–ú–∞—Ç –∫–æ–Ω—Å—É–ª.png', 'rb'))


@dp.message_handler(lambda message: message.text == "–§–∏–∑–∏–∫–∞")
async def action_cancel(message: types.Message):
    remove_keyboard = types.ReplyKeyboardRemove()
    await bot.send_chat_action(message.from_user.id, ChatActions.UPLOAD_PHOTO)
    await asyncio.sleep(0, 5)
    await bot.send_photo(message.from_user.id, photo=open('C://Users//admin//Desktop//Ggbot//–§–∏–∑–∏–∫–∞ –∫–æ–Ω—Å—É–ª.png', 'rb'))


@dp.message_handler(lambda message: message.text == "–ë–∏–æ–ª–æ–≥–∏—è, —Ö–∏–º–∏—è, –≥–µ–æ–≥—Ä–∞—Ñ–∏—è, –æ–±—â–µ—Å—Ç–≤–æ–∑–Ω–∞–Ω–∏–µ")
async def action_cancel(message: types.Message):
    remove_keyboard = types.ReplyKeyboardRemove()
    await bot.send_chat_action(message.from_user.id, ChatActions.UPLOAD_PHOTO)
    await asyncio.sleep(0, 5)
    await bot.send_photo(message.from_user.id,
                         photo=open('C://Users//admin//Desktop//Ggbot//–ë–∏–æ–ª–æ–≥–∏—è –∫–æ–Ω—Å—É–ª.png', 'rb'))


@dp.message_handler(lambda message: message.text == "–ê–Ω–≥–ª–∏–π—Å–∫–∏–π —è–∑—ã–∫")
async def action_cancel(message: types.Message):
    remove_keyboard = types.ReplyKeyboardRemove()
    await bot.send_chat_action(message.from_user.id, ChatActions.UPLOAD_PHOTO)
    await asyncio.sleep(0, 5)
    await bot.send_photo(message.from_user.id, photo=open('C://Users//admin//Desktop//Ggbot//–ê–Ω–≥–ª –∫–æ–Ω—Å—É–ª.png', 'rb'))


@dp.message_handler(lambda message: message.text == "–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞")
async def action_cancel(message: types.Message):
    remove_keyboard = types.ReplyKeyboardRemove()
    await bot.send_chat_action(message.from_user.id, ChatActions.UPLOAD_PHOTO)
    await asyncio.sleep(0, 5)
    await bot.send_photo(message.from_user.id, photo=open('C://Users//admin//Desktop//Ggbot//–ò–Ω—Ñ –∫–æ–Ω—Å—É–ª.png', 'rb'))


@dp.message_handler(lambda message: message.text == "–û–± –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ (–î–æ—à–∫–æ–ª—å–Ω–æ–µ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ)")
async def action_cancel(message: types.Message):
    remove_keyboard = types.ReplyKeyboardRemove()
    user_id = message.from_user.id
    await bot.send_chat_action(user_id, ChatActions.UPLOAD_DOCUMENT)
    await asyncio.sleep(0, 5)
    await bot.send_document(user_id, document=open('C://Users//admin//Desktop//Ggbot//dou_notify.pdf', 'rb'))


@dp.message_handler(lambda message: message.text == "–û–± –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ (–û–±—â–µ–µ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ)")
async def action_cancel(message: types.Message):
    user_id = message.from_user.id
    await bot.send_chat_action(user_id, ChatActions.UPLOAD_DOCUMENT)
    await asyncio.sleep(0, 5)
    await bot.send_document(user_id, document=open('C://Users//admin//Desktop//Ggbot//edu_notify.pdf', 'rb'))


@dp.message_handler(lambda message: message.text == "–®–∫–æ–ª—å–Ω—ã–µ —ç–∫–∑–∞–º–µ–Ω—ã")
async def action_cancel(message: types.Message):
    user_id = message.from_user.id
    await bot.send_chat_action(message.from_user.id, ChatActions.UPLOAD_PHOTO)
    await asyncio.sleep(0, 5)
    await bot.send_photo(message.from_user.id, photo=open('C://Users//admin//Desktop//Ggbot//–õ–µ—Ç–Ω—è—è —Å–µ—Å—Å–∏—è.png', 'rb'))
    await bot.send_message(message.from_user.id, "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–±–Ω—ã—Ö —ç–∫–∑–∞–º–µ–Ω–æ–≤ (–û–ì–≠/–ï–ì–≠)üëá")
    await bot.send_photo(message.from_user.id, photo=open('C://Users//admin//Desktop//Ggbot//–ï–ì–≠ –û–ì–≠.jpg', 'rb'))


@dp.message_handler(lambda message: message.text == "–û–ì–≠")
async def action_cancel(message: types.Message):
    user_id = message.from_user.id
    await bot.send_chat_action(user_id, ChatActions.UPLOAD_DOCUMENT)
    await asyncio.sleep(0, 5)
    await bot.send_document(user_id, document=open('C://Users//admin//Desktop//Ggbot//–û–ì–≠.docx', 'rb'))


@dp.message_handler(lambda message: message.text == "–ï–ì–≠")
async def action_cancel(message: types.Message):
    user_id = message.from_user.id
    await bot.send_chat_action(user_id, ChatActions.UPLOAD_DOCUMENT)
    await asyncio.sleep(0, 5)
    await bot.send_document(user_id, document=open('C://Users//admin//Desktop//Ggbot//–ï–ì–≠.docx', 'rb'))


@dp.message_handler(lambda message: message.text == "–î–æ–ø—É—Å–∫ –∫ —É—á–µ–±–Ω—ã–º –∑–∞–Ω—è—Ç–∏—è–º")
async def action_cancel(message: types.Message):
    user_id = message.from_user.id
    await bot.send_chat_action(user_id, ChatActions.UPLOAD_DOCUMENT)
    await asyncio.sleep(0, 5)
    await bot.send_document(user_id, document=open('C://Users//admin//Desktop//Ggbot//after_absence.pdf', 'rb'))


@dp.message_handler(lambda message: message.text == "–û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –Ω–∞ –∑–∞–Ω—è—Ç–∏—è—Ö")
async def action_cancel(message: types.Message):
    user_id = message.from_user.id
    await bot.send_chat_action(user_id, ChatActions.UPLOAD_DOCUMENT)
    await asyncio.sleep(0, 5)
    await bot.send_document(user_id,
                            document=open('C://Users//admin//Desktop//Ggbot//–æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –Ω–∞ –∑–∞–Ω—è—Ç–∏—è—Ö.pdf', 'rb'))


# @dp.message_handler()
# async def echo_message(msg: types.Message):
# await bot.send_message(msg.from_user.id, msg.text)


@dp.message_handler(content_types=['text'])
async def xxx(message: types.Message):
    s = ''
    s1 = ''
    f = str(message.from_user.first_name)
    for i in range(len(f)):
        if f[i] != ' ' and f[i] not in A and f[i] not in B and f[i] not in C and f[i] not in D and f[i] not in E and f[i] not in Q:
            s += '?'
        elif f[i] == ' ':
            s += ' '
        else:
            s += f[i]
    g = str(message.from_user.last_name)
    for i in range(len(g)):
        if g[i] != ' ' and g[i] not in A and g[i] not in B and g[i] not in C and g[i] not in D and f[i] not in E and f[i] not in Q:
            s1 += '?'
        elif g[i] == ' ':
            s1 += ' '
        else:
            s1 += g[i]

    with open("C://Users//admin//Desktop//Ggbot//users.txt", "r") as JF:
        J = set()
        for line in JF:
            J.add(line.strip())
        if not (str(message.chat.id) + ":" + str(message.from_user.username) + ":" + s + ":" + s1) in J:
            JF = open("C://Users//admin//Desktop//Ggbot//users.txt", "a", encoding='ANSI')
            JF.write(str(message.chat.id) + ":" + str(message.from_user.username) + ":" + s + ":" + s1 + '\n')
            J.add(message.chat.id)
    if message.text == "PPV" or message.text == "–ü–ü–í" or message.text == "–ø–ø–≤" or message.text == "ppv":
        await bot.send_chat_action(message.from_user.id, ChatActions.UPLOAD_PHOTO)
        await bot.send_photo(message.from_user.id, photo=open('C://Users//admin//Desktop//Ggbot//–ü–ü–í.jpg', 'rb'))
    elif message.text == "–ó–∞—è–≤–ª–µ–Ω–∏—è" or message.text == "–ó–∞—è–≤–ª–µ–Ω–∏–µ" or message.text == "–∑–∞—è–≤–ª–µ–Ω–∏–µ" or message.text == "–∑–∞—è–≤–ª–µ–Ω–∏—è":
        poll_keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
        poll_keyboard.add(types.KeyboardButton(text="–û–± –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ (–î–æ—à–∫–æ–ª—å–Ω–æ–µ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ)"))
        poll_keyboard.add(types.KeyboardButton(text="–û–± –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ (–û–±—â–µ–µ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ)"))
        poll_keyboard.add(types.KeyboardButton(text="–î–æ–ø—É—Å–∫ –∫ —É—á–µ–±–Ω—ã–º –∑–∞–Ω—è—Ç–∏—è–º"))
        poll_keyboard.add(types.KeyboardButton(text="–û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –Ω–∞ –∑–∞–Ω—è—Ç–∏—è—Ö"))
        await message.answer("–ó–ê–Ø–í–õ–ï–ù–ò–Ø", reply_markup=poll_keyboard)
    elif message.text == "–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏" or message.text == "–∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏" or message.text == "—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–π" or message.text == "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–π":
        poll_keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
        poll_keyboard.add(types.KeyboardButton(text="–†—É—Å—Å–∫–∏–π —è–∑—ã–∫"))
        poll_keyboard.add(types.KeyboardButton(text="–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞"))
        poll_keyboard.add(types.KeyboardButton(text="–§–∏–∑–∏–∫–∞"))
        poll_keyboard.add(types.KeyboardButton(text="–ë–∏–æ–ª–æ–≥–∏—è, —Ö–∏–º–∏—è, –≥–µ–æ–≥—Ä–∞—Ñ–∏—è, –æ–±—â–µ—Å—Ç–≤–æ–∑–Ω–∞–Ω–∏–µ"))
        poll_keyboard.add(types.KeyboardButton(text="–ê–Ω–≥–ª–∏–π—Å–∫–∏–π —è–∑—ã–∫"))
        poll_keyboard.add(types.KeyboardButton(text="–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞"))
        await message.answer("–ö–û–ù–°–£–õ–¨–¢–ê–¶–ò–ò", reply_markup=poll_keyboard)
    elif message.text == "–ë–ª–∏–∂–∞–π—à–∏–µ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∏–µ —Ä–∞–±–æ—Ç—ã" or message.text == "–±–ª–∏–∂–∞–π—à–∏–µ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∏–µ —Ä–∞–±–æ—Ç—ã" or message.text == "–î–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∏–µ —Ä–∞–±–æ—Ç—ã" or message.text == "–¥–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∏–µ —Ä–∞–±–æ—Ç—ã" or message.text == "–¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞" or message.text == "–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞":
        await bot.send_chat_action(message.from_user.id, ChatActions.UPLOAD_PHOTO)
        await bot.send_photo(message.from_user.id, photo=open('C://Users//admin//Desktop//Ggbot//–ú–¶–ö–û1.jpg', 'rb'))
        await bot.send_photo(message.from_user.id, photo=open('C://Users//admin//Desktop//Ggbot//–ú–¶–ö–û2.jpg', 'rb'))
        await bot.send_document(message.from_user.id,
                                document=open('C://Users//admin//Desktop//Ggbot//–û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏.docx', 'rb'))
    elif message.text == "–ö—Ä—É–∂–∫–∏" or message.text == "–∫—Ä—É–∂–∫–∏":
        poll_keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
        poll_keyboard.add(types.KeyboardButton(text="7 –∫–ª–∞—Å—Å"))
        poll_keyboard.add(types.KeyboardButton(text="8 –∫–ª–∞—Å—Å"))
        poll_keyboard.add(types.KeyboardButton(text="9 –∫–ª–∞—Å—Å"))
        poll_keyboard.add(types.KeyboardButton(text="10 –∫–ª–∞—Å—Å"))
        poll_keyboard.add(types.KeyboardButton(text="11 –∫–ª–∞—Å—Å"))
        await message.answer("–ö–†–£–ñ–ö–ò", reply_markup=poll_keyboard)
    elif message.text == "–ü–æ–ª–µ–∑–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è" or message.text == "–ø–æ–ª–µ–∑–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è":
        keyboard = InlineKeyboardMarkup()
        url_button1 = InlineKeyboardButton(text="–ì–ò–ê ‚Äì 9, 11",
                                           url="http://obrnadzor.gov.ru/gosudarstvennye-uslugi-i-funkczii/7701537808-gosfunction/gosudarstvennaya-itogovaya-attestacziya-vypusknikov-11-klassov/")
        keyboard.add(url_button1)
        url_button2 = InlineKeyboardButton(text="–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –ò–¢- –∫–ª–∞—Å—Å–æ–≤",
                                           url="http://profil.mos.ru/it/\nhttp://profil.mos.ru/it/?page_id=2193")
        keyboard.add(url_button2)
        url_button3 = InlineKeyboardButton(text="–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –∏–Ω–∂–µ–Ω–µ—Ä–Ω—ã—Ö –∫–ª–∞—Å—Å–æ–≤",
                                           url="http://profil.mos.ru/inj.html")
        keyboard.add(url_button3)
        url_button4 = InlineKeyboardButton(text="–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ-–Ω–∞—É—á–Ω—ã—Ö –∫–ª–∞—Å—Å–æ–≤",
                                           url="http://profil.mos.ru/ntek.html")
        keyboard.add(url_button4)
        url_button5 = InlineKeyboardButton(text="–î–µ–º–æ-–≤–∞—Ä–∏–∞–Ω—Ç—ã –¥–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∏—Ö —Ä–∞–±–æ—Ç –æ—Ç –ú–¶–ö–û",
                                           url="https://mcko.ru/pages/m_n_d_i-m_materials")
        keyboard.add(url_button5)
        url_button6 = InlineKeyboardButton(text="–î–ª—è –∂–µ–ª–∞—é—â–∏—Ö –ø—Ä–æ–π—Ç–∏ –Ω–µ–∑–∞–≤–∏—Å–∏–º—É—é –ø—Ä–æ–≤–µ—Ä–∫—É –∑–Ω–∞–Ω–∏–π",
                                           url="https://mcko.ru/diagnostic_requests/new")
        keyboard.add(url_button6)
        url_button7 = InlineKeyboardButton(text="–°—É–±–±–æ—Ç—ã –º–æ—Å–∫–æ–≤—Å–∫–æ–≥–æ —à–∫–æ–ª—å–Ω–∏–∫–∞", url="https://events.educom.ru/")
        keyboard.add(url_button7)
        await bot.send_message(message.chat.id, "–ü–û–õ–ï–ó–ù–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø", reply_markup=keyboard)
    elif message.text == "–≠–∫–∑–∞–º–µ–Ω—ã" or message.text == "—ç–∫–∑–∞–º–µ–Ω—ã" or message.text == "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ —ç–∫–∑–∞–º–µ–Ω–æ–≤" or message.text == "—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ —ç–∫–∑–∞–º–µ–Ω–æ–≤":
        poll_keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
        poll_keyboard.add(types.KeyboardButton(text="–®–∫–æ–ª—å–Ω—ã–µ —ç–∫–∑–∞–º–µ–Ω—ã"))
        poll_keyboard.add(types.KeyboardButton(text="–û–ì–≠"))
        poll_keyboard.add(types.KeyboardButton(text="–ï–ì–≠"))
        await message.answer("–≠–∫–∑–∞–º–µ–Ω—ã", reply_markup=poll_keyboard)
        # await bot.send_chat_action(message.from_user.id, ChatActions.UPLOAD_PHOTO)
        # await asyncio.sleep(0,5)
        # await bot.send_photo(message.from_user.id, photo=open('C://Users//admin//Desktop//Ggbot//–°–µ—Å—Å–∏—è-1.pdf', 'rb'))
        # await bot.send_photo(message.from_user.id, photo=open('C://Users//admin//Desktop//Ggbot//–°–µ—Å—Å–∏—è-2.pdf', 'rb'))
        # await bot.send_photo(message.from_user.id, photo=open('C://Users//admin//Desktop//Ggbot//–ï–ì–≠ –û–ì–≠.jpg', 'rb'))
    elif message.text == "—É—á–µ–±–Ω—ã–π –∫–∞–ª–µ–Ω–¥–∞—Ä—å" or message.text == "–£—á–µ–±–Ω—ã–π –∫–∞–ª–µ–Ω–¥–∞—Ä—å" or message.text == "–∫–∞–Ω–∏–∫—É–ª—ã" or message.text == "–ö–∞–Ω–∏–∫—É–ª—ã" or message.text == "–ö–∞–ª–µ–Ω–¥–∞—Ä—å" or message.text == "–∫–∞–ª–µ–Ω–¥–∞—Ä—å":
        await bot.send_chat_action(message.from_user.id, ChatActions.UPLOAD_PHOTO)
        await bot.send_photo(message.from_user.id,
                             photo=open('C://Users//admin//Desktop//Ggbot//–£—á–µ–±–Ω—ã–π –∫–∞–ª–µ–Ω–¥–∞—Ä—å.png', 'rb'))
    elif message.text == "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ" or message.text == "—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ" or message.text == "—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ —É—Ä–æ–∫–æ–≤" or message.text == "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ —É—Ä–æ–∫–æ–≤":
        poll_keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
        poll_keyboard.add(types.KeyboardButton(text="7–õ"))
        poll_keyboard.add(types.KeyboardButton(text="7–ú"))
        poll_keyboard.add(types.KeyboardButton(text="8–õ"))
        poll_keyboard.add(types.KeyboardButton(text="8–ú"))
        poll_keyboard.add(types.KeyboardButton(text="8–ù"))
        poll_keyboard.add(types.KeyboardButton(text="9–õ"))
        poll_keyboard.add(types.KeyboardButton(text="9–ú"))
        poll_keyboard.add(types.KeyboardButton(text="9–ù"))
        poll_keyboard.add(types.KeyboardButton(text="10–õ"))
        poll_keyboard.add(types.KeyboardButton(text="10–ú"))
        poll_keyboard.add(types.KeyboardButton(text="10–ù"))
        poll_keyboard.add(types.KeyboardButton(text="11–õ"))
        poll_keyboard.add(types.KeyboardButton(text="11–ù"))
        poll_keyboard.add(types.KeyboardButton(text="11–ú"))
        poll_keyboard.add(types.KeyboardButton(text="11–Ø"))
        await message.answer("–†–ê–°–ü–ò–°–ê–ù–ò–ï", reply_markup=poll_keyboard)
    elif message.text == "–∫–æ–Ω—Ç–∞–∫—Ç—ã" or message.text == "–ö–æ–Ω—Ç–∞–∫—Ç—ã":
        keyboard = InlineKeyboardMarkup()
        url_button8 = InlineKeyboardButton(text="–°–ê–ô–¢ –®–ö–û–õ–´", url="https://1502.mskobr.ru/#/")
        keyboard.add(url_button8)
        await bot.send_message(message.from_user.id, '8(495) 962-18-11 –¥–æ–±–∞–≤–æ—á–Ω—ã–π 805 ‚Äî —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å –∫–æ—Ä–ø—É—Å–∞ –ë—Ä–∏—Ç–æ–≤ –î–µ–Ω–∏—Å –†—É—Å–ª–∞–Ω–æ–≤–∏—á;\n\
8(495) 963-19-11 –¥–æ–±–∞–≤–æ—á–Ω—ã–π 811 ‚Äî –º–µ—Ç–æ–¥–∏—Å—Ç –∫–æ—Ä–ø—É—Å–∞ –°–∫–∞–ª–µ–ø–æ–≤–∞ –õ–∏–¥–∏—è –í–∞—Å–∏–ª—å–µ–≤–Ω–∞;\n8(495) 963-08-59 –¥–æ–±–∞–≤–æ—á–Ω—ã–π 801 ‚Äî —Å–µ–∫—Ä–µ—Ç–∞—Ä—å –∫–æ—Ä–ø—É—Å–∞ –ì–∞–º–º–∞;\n8(495) 963-47-78 –¥–æ–±–∞–≤–æ—á–Ω—ã–π 851 ‚Äî —Å–æ—Ü–∏–∞–ª—å–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã;\n8(495) 963-66-90 –¥–æ–±–∞–≤–æ—á–Ω—ã–π 804 ‚Äî –ø–æ—Å—Ç –æ—Ö—Ä–∞–Ω—ã;',
                               reply_markup=keyboard)
    elif (message.text == "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞" or message.text == "—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞") and int(message.chat.id) == int(admin_chat_id):
        F = open('C://Users//admin//Desktop//Ggbot//users.txt', 'r')
        d = sum(1 for line in F) - 1
        if d != 12 and d < 100 and (str(d)[-1] == '2' or str(d)[-1] == '3' or str(d)[-1] == '4'):
            await bot.send_message(admin_chat_id, f'C—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞: *{d}* —á–µ–ª–æ–≤–µ–∫a', parse_mode=ParseMode.MARKDOWN)
            # await bot.send_document(admin_chat_id, document=open('C://Users//admin//Desktop//Ggbot//users.txt','rb'))
            # excel = 'C://Users//admin//Desktop//Ggbot//users.txt'
            # df = pd.read_csv(excel, sep=':',encoding='cp1251')
            # df.to_excel('C://Users//admin//Desktop//Ggbot//users.xlsx', index=False)
            # await bot.send_document(admin_chat_id, document=open('C://Users//admin//Desktop//Ggbot//users.xlsx', 'rb'))
            # path = os.path.join(os.path.abspath(os.path.dirname('C://Users//admin//Desktop//Ggbot//')), 'users.xlsx')
            # os.remove(path)
        else:
            await bot.send_message(admin_chat_id, f'C—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞: *{d}* —á–µ–ª–æ–≤–µ–∫', parse_mode=ParseMode.MARKDOWN)
            # await bot.send_document(admin_chat_id, document=open('C://Users//admin//Desktop//Ggbot//users.txt','rb'))
            # excel = 'C://Users//admin//Desktop//Ggbot//users.txt'
            # df = pd.read_csv(excel, sep=':',encoding='cp1251')
            # df.to_excel('C://Users//admin//Desktop//Ggbot//users.xlsx', index=False)
            # await bot.send_document(admin_chat_id, document=open('C://Users//admin//Desktop//Ggbot//users.xlsx', 'rb'))
            # path = os.path.join(os.path.abspath(os.path.dirname('C://Users//admin//Desktop//Ggbot//')), 'users.xlsx')
            # os.remove(path)
        excel = 'C://Users//admin//Desktop//Ggbot//users.txt'
        df = pd.read_csv(excel, sep=':', encoding='ANSI')
        df.to_excel('C://Users//admin//Desktop//Ggbot//users.xlsx', index=False)
        await bot.send_document(admin_chat_id, document=open('C://Users//admin//Desktop//Ggbot//users.xlsx', 'rb'))
        path = os.path.join(os.path.abspath(os.path.dirname('C://Users//admin//Desktop//Ggbot//')), 'users.xlsx')
        os.remove(path)

        F.close()
    elif int(message.chat.id) == int(admin_chat_id):
        chatId = message.text.split(': ')[0]
        text = bold('–í—ã —Å–ø—Ä–∞—à–∏–≤–∞–ª–∏, –º—ã –æ—Ç–≤–µ—á–∞–µ–ºüí™:') + '\n' + _join('–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!') + '\n' + message.text.split(': ')[
            1] + '\n' + italic('–° —É–≤–∞–∂–µ–Ω–∏–µ–º —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞ üë®‚Äçüíª')
        await bot.send_message(chatId, text, parse_mode=ParseMode.MARKDOWN)
    else:
        await bot.send_message(message.from_user.id,
                               "–Ø —Å–∫–æ—Ä–æ –Ω–∞—É—á—É—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞—Ç—å –∏ —ç—Ç–æ üí™\nA –ø–æ–∫–∞ —è —Ç–µ–±—è –Ω–µ –ø–æ–Ω–∏–º–∞—éü•∫\n–ü—Ä–æ–≤–µ—Ä—å –Ω–∞–ø–∏—Å–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã –µ—â–µ —Ä–∞–∑)\n–í—Å–µ–≥–¥–∞ –≥–æ—Ç–æ–≤ –ø–æ–º–æ—á—å, –ø—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏\n/helpüòä")


class Form(StatesGroup):
    vopros = State()  # –ó–∞–¥–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ


@dp.message_handler(Text(equals="–û—Ç–º–µ–Ω–∞"), state="*")
async def menu_button(message: types.Message, state: FSMContext):
    await state.finish()
    await bot.send_message(
        message.chat.id, "–û–±—Ä–∞—â–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ.")

    await state.finish()


@dp.message_handler(state=Form.vopros)  # –ü—Ä–∏–Ω–∏–º–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
async def start(message: types.Message, state: FSMContext):
    async with state.proxy() as proxy:  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è
        proxy['vopros'] = message.text
    text = ''
    await bot.send_message(
        admin_chat_id,
        # f"–ü–æ—Å—Ç—É–ø–∏–ª–∞ –∑–∞—è–≤–∫–∞ –æ—Ç @{message.from_user.username}\n\n"

        f"–ü–æ—Å—Ç—É–ø–∏–ª–æ –æ–±—Ä–∞—â–µ–Ω–∏–µ –æ—Ç {message.chat.id}\n@{message.from_user.username}\n"
        f'–¢–µ–∫—Å—Ç –æ–±—Ä–∞—â–µ–Ω–∏—è: {proxy.get("vopros")}\n'
        ,

    )
    await bot.send_message(message.chat.id,
                           f'{message.from_user.first_name}, –í–∞—à–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ. –ú—ã —É–∂–µ –ø–æ–ª—É—á–∏–ª–∏ –µ–≥–æ.\n–û–∂–∏–¥–∞–π—Ç–µ –æ—Ç–≤–µ—Ç–∞üòâ')
    await state.finish()  # –í—ã–∫–ª—é—á–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ


if __name__ == '__main__':
    executor.start_polling(dp)